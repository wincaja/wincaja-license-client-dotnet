# Script de prueba para la nueva l√≥gica SSL de API v1.1
# Verifica el flujo completo de primera activaci√≥n y reactivaci√≥n

Write-Host "=== PRUEBA DE NUEVA L√ìGICA SSL (API v1.1) ===" -ForegroundColor Green

# Compilar el proyecto
Write-Host "`n1. Compilando proyecto..." -ForegroundColor Yellow
dotnet build WincajaLicenseManager/WincajaLicenseManager.csproj
if ($LASTEXITCODE -ne 0) {
    Write-Host "Error en compilaci√≥n" -ForegroundColor Red
    exit 1
}

Write-Host "`n‚úÖ Compilaci√≥n exitosa" -ForegroundColor Green

Write-Host "`n=== RESUMEN DE CAMBIOS IMPLEMENTADOS ===" -ForegroundColor Cyan

Write-Host "`nüìã Cambios en Modelos:" -ForegroundColor Yellow
Write-Host "  ‚úÖ StoredLicense.SslNumber marcado como [Obsolete]" -ForegroundColor White
Write-Host "  ‚úÖ Nueva clase: SslRequirementInfo" -ForegroundColor White
Write-Host "  ‚úÖ SslInfo.Used campo clave para detectar primera activaci√≥n" -ForegroundColor White

Write-Host "`nüìã Cambios en ApiClient:" -ForegroundColor Yellow
Write-Host "  ‚úÖ Nuevo m√©todo: ValidateLicense() sin hardware check" -ForegroundColor White
Write-Host "  ‚úÖ √ötil para consultar ssl.used antes de activar" -ForegroundColor White

Write-Host "`nüìã Cambios en LicenseValidator:" -ForegroundColor Yellow
Write-Host "  ‚úÖ Nuevo m√©todo: CheckSslRequirement()" -ForegroundColor White
Write-Host "  ‚úÖ ActivateLicense() con l√≥gica inteligente:" -ForegroundColor White
Write-Host "    ‚Ä¢ Detecta si es primera activaci√≥n (ssl.used = false)" -ForegroundColor White
Write-Host "    ‚Ä¢ Requiere SSL solo en primera activaci√≥n" -ForegroundColor White
Write-Host "    ‚Ä¢ Permite reactivaci√≥n sin SSL" -ForegroundColor White
Write-Host "  ‚úÖ ForceOnlineValidation() ya no env√≠a SSL" -ForegroundColor White
Write-Host "  ‚úÖ PerformOnlineValidationHardware() ya no env√≠a SSL" -ForegroundColor White

Write-Host "`nüìã Mejoras UX:" -ForegroundColor Yellow
Write-Host "  ‚úÖ Mensajes claros seg√∫n estado de activaci√≥n" -ForegroundColor White
Write-Host "  ‚úÖ Logs informativos para debugging" -ForegroundColor White
Write-Host "  ‚úÖ Errores espec√≠ficos con soluciones" -ForegroundColor White

Write-Host "`n=== FLUJO ESPERADO ===" -ForegroundColor Cyan

Write-Host "`nüîπ PRIMERA ACTIVACI√ìN (Licencia Migrada):" -ForegroundColor Yellow
Write-Host "1. CheckSslRequirement(licenseKey)" -ForegroundColor White
Write-Host "   ‚Üí IsFirstActivation = true, IsRequired = true" -ForegroundColor Gray
Write-Host "2. ActivateLicense(licenseKey, null)" -ForegroundColor White
Write-Host "   ‚Üí Error: SSL_REQUIRED_FOR_FIRST_ACTIVATION" -ForegroundColor Red
Write-Host "3. Usuario proporciona SSL: 'SL11A13197'" -ForegroundColor White
Write-Host "4. ActivateLicense(licenseKey, 'SL11A13197')" -ForegroundColor White
Write-Host "   ‚Üí Success = true" -ForegroundColor Green
Write-Host "   ‚Üí Servidor marca ssl.used = true" -ForegroundColor Gray
Write-Host "   ‚Üí Mensaje: 'Ya no necesitar√° el SSL para futuras activaciones'" -ForegroundColor Gray

Write-Host "`nüîπ DESACTIVACI√ìN:" -ForegroundColor Yellow
Write-Host "1. DeactivateLicense()" -ForegroundColor White
Write-Host "   ‚Üí Success = true" -ForegroundColor Green
Write-Host "   ‚Üí ssl.used permanece en true en el servidor" -ForegroundColor Gray
Write-Host "   ‚Üí Archivo local borrado" -ForegroundColor Gray

Write-Host "`nüîπ REACTIVACI√ìN (Nueva M√°quina):" -ForegroundColor Yellow
Write-Host "1. CheckSslRequirement(licenseKey)" -ForegroundColor White
Write-Host "   ‚Üí IsFirstActivation = false, IsRequired = true" -ForegroundColor Gray
Write-Host "   ‚Üí Mensaje: 'SSL no es necesario para reactivar'" -ForegroundColor Gray
Write-Host "2. ActivateLicense(licenseKey, null)" -ForegroundColor White
Write-Host "   ‚Üí Success = true (SIN SSL)" -ForegroundColor Green
Write-Host "   ‚Üí Mensaje: 'Reactivaci√≥n exitosa'" -ForegroundColor Gray

Write-Host "`nüîπ LICENCIA NUEVA (Sin SSL):" -ForegroundColor Yellow
Write-Host "1. CheckSslRequirement(licenseKey)" -ForegroundColor White
Write-Host "   ‚Üí IsRequired = false" -ForegroundColor Gray
Write-Host "2. ActivateLicense(licenseKey, null)" -ForegroundColor White
Write-Host "   ‚Üí Success = true" -ForegroundColor Green

Write-Host "`n=== VALIDACIONES SIN SSL ===" -ForegroundColor Cyan
Write-Host "‚úÖ ForceOnlineValidation() ya no env√≠a SSL" -ForegroundColor Green
Write-Host "‚úÖ PerformOnlineValidationHardware() ya no env√≠a SSL" -ForegroundColor Green
Write-Host "‚úÖ Servidor maneja ssl.used autom√°ticamente" -ForegroundColor Green

Write-Host "`n=== COMPATIBILIDAD ===" -ForegroundColor Cyan
Write-Host "‚úÖ Licencias nuevas: Sin cambios, funcionan igual" -ForegroundColor Green
Write-Host "‚úÖ Licencias migradas: Mejor UX, SSL solo en primera vez" -ForegroundColor Green
Write-Host "‚úÖ API v1.1: Compatible con nueva l√≥gica ssl.used" -ForegroundColor Green
Write-Host "‚úÖ Archivos existentes: SslNumber marcado obsoleto pero compatible" -ForegroundColor Green

Write-Host "`n=== BENEFICIOS ===" -ForegroundColor Cyan
Write-Host "üéâ Usuario NO necesita guardar el SSL f√≠sicamente" -ForegroundColor White
Write-Host "üéâ Cambio de m√°quina simplificado" -ForegroundColor White
Write-Host "üéâ Menos llamadas a soporte t√©cnico" -ForegroundColor White
Write-Host "üéâ Experiencia de usuario mejorada" -ForegroundColor White
Write-Host "üéâ Seguridad mantenida (validaci√≥n en primera activaci√≥n)" -ForegroundColor White

Write-Host "`n=== PR√ìXIMOS PASOS ===" -ForegroundColor Yellow
Write-Host "1. Probar con licencia migrada real:" -ForegroundColor White
Write-Host "   ‚Ä¢ Primera activaci√≥n con SSL" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Verificar que ssl.used = true despu√©s" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Desactivar" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Reactivar sin SSL" -ForegroundColor Gray
Write-Host "2. Probar con licencia nueva:" -ForegroundColor White
Write-Host "   ‚Ä¢ Activaci√≥n sin SSL" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Verificar funcionamiento normal" -ForegroundColor Gray
Write-Host "3. Verificar logs en consola:" -ForegroundColor White
Write-Host "   ‚Ä¢ CheckSslRequirement() muestra estado" -ForegroundColor Gray
Write-Host "   ‚Ä¢ ActivateLicense() muestra decisiones" -ForegroundColor Gray
Write-Host "   ‚Ä¢ Validaciones muestran que SSL no se env√≠a" -ForegroundColor Gray

Write-Host "`n=== EJEMPLO DE USO PARA EL EQUIPO .NET ===" -ForegroundColor Cyan

Write-Host @"

// C# - Activaci√≥n inteligente
public bool ActivateWithAutoSsl(string licenseKey)
{
    var manager = new WincajaLicenseManagerImpl();
    
    // 1. Verificar si necesita SSL
    var sslInfoJson = manager.CheckSslRequirement(licenseKey);
    var sslInfo = JsonConvert.DeserializeObject<dynamic>(sslInfoJson);
    
    if (sslInfo.success == false)
    {
        Console.WriteLine("Error: " + sslInfo.error);
        return false;
    }
    
    string sslNumber = null;
    
    // 2. Si es primera activaci√≥n, solicitar SSL
    if (sslInfo.isFirstActivation == true && sslInfo.isRequired == true)
    {
        Console.WriteLine(sslInfo.message);
        Console.Write("Ingrese el n√∫mero SSL: ");
        sslNumber = Console.ReadLine();
    }
    else if (sslInfo.isRequired == true && sslInfo.isFirstActivation == false)
    {
        Console.WriteLine("Reactivaci√≥n: No se requiere SSL");
    }
    
    // 3. Activar
    string error;
    bool success = manager.ActivateLicense(licenseKey, out error, sslNumber);
    
    if (success)
    {
        Console.WriteLine("‚úÖ Activaci√≥n exitosa");
        return true;
    }
    else
    {
        Console.WriteLine("‚ùå Error: " + error);
        return false;
    }
}

"@ -ForegroundColor White

Write-Host "`n=== DOCUMENTACI√ìN T√âCNICA ===" -ForegroundColor Cyan
Write-Host "üìÑ Ver: PLAN-ADAPTACION-NUEVA-API.md" -ForegroundColor White
Write-Host "üìÑ Ver: NUEVA-LOGICA-SSL-ANALISIS.md" -ForegroundColor White

Write-Host "`n‚úÖ ADAPTACI√ìN A API v1.1 COMPLETA" -ForegroundColor Green
Write-Host "üöÄ El cliente est√° listo para la nueva l√≥gica SSL" -ForegroundColor Green
